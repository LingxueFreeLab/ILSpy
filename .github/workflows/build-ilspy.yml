name: Build ILSpy

on:
  push:
    branches: [ master, release/** ]
  pull_request:
    branches: [ master, release/** ]

jobs:
  Build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - configuration: debug
            solution: ilspy.sln
            channel: zip
          - configuration: release
            solution: ilspy.sln
            channel: zip
          - configuration: release
            solution: ilspy.withpackage.sln
            channel: ci
          - configuration: release
            solution: ilspy.withpackage.sln
            channel: store
    env:
      BuildPlatform: Any CPU
      StagingDirectory: buildartifacts 

    steps:
    - run: mkdir -p $env:StagingDirectory
      
    - name: Force git to use crlf, otherwise dotnet-format --check fails
      run: git config --global core.autocrlf true
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      with:
       vs-version: '[16.6,16.9)'

    - name: Install dotnet-format
      run: dotnet tool install dotnet-format --global --version 4.1.131201
    - name: Get Version PS
      run: pwsh .\BuildTools\ghactions-install.ps1

    - name: Restore the application
      run: msbuild ${{ matrix.solution }} /t:Restore /p:Configuration=${{ matrix.configuration }} /p:Platform=$env:BuildPlatform

    - name: Build
      run: msbuild ${{ matrix.solution }} /p:Configuration=${{ matrix.configuration }} /p:Platform=$env:BuildPlatform /p:AppxPackageDir="${{ github.workspace }}\${{ env.StagingDirectory }}\${{ matrix.channel }}\" 

    - name: Execute unit tests
      run: dotnet test ICSharpCode.Decompiler.Tests\bin\${{ matrix.configuration }}\net472\ICSharpCode.Decompiler.Tests.exe ILSpy.Tests\bin\${{ matrix.configuration }}\net472\ILSpy.Tests.exe ILSpy.BamlDecompiler.Tests\bin\${{ matrix.configuration }}\net472\ILSpy.BamlDecompiler.Tests.exe
      
    - name: Tab check
      run: python BuildTools\tidy.py

    - name: dotnet-format check
      run: dotnet-format --check --verbosity diagnostic ILSpy.sln
    
    - name: Zip ILSpy
      if: matrix.channel == 'zip' && matrix.configuration == 'release'
      # run: 7z a -tzip $env:StagingDirectory\ILSpy_binaries.zip .\ILSpy\bin\${{ matrix.configuration }}\net472\*
      run: 7z a -tzip $env:StagingDirectory\ILSpy_binaries.zip .\ILSpy\bin\${{ matrix.configuration }}\net472\*.dll .\ILSpy\bin\${{ matrix.configuration }}\net472\*.exe .\ILSpy\bin\${{ matrix.configuration }}\net472\*.config .\ILSpy\bin\${{ matrix.configuration }}\net472\*\ILSpy.resources.dll .\ILSpy\bin\${{ matrix.configuration }}\net472\*\ILSpy.ReadyToRun.Plugin.resources.dll
      
    # https://github.com/actions/upload-artifact
    - name: Upload store build artifacts
      if: matrix.channel == 'store'
      uses: actions/upload-artifact@v2
      with:
        name: MSIX Store Package
        path: ${{ env.StagingDirectory }}\${{ matrix.channel }}\*.*

    - name: Upload VSIX release build artifacts
      if: matrix.channel == 'zip' && matrix.configuration == 'release'
      uses: actions/upload-artifact@v2
      with:
        name: VS Addin
        path: ILSpy.Addin\bin\Release\net472\*.vsix

    - name: Upload NuGet release build artifacts
      if: matrix.channel == 'zip' && matrix.configuration == 'release'
      uses: actions/upload-artifact@v2
      with:
        name: NuGet Package
        path: ICSharpCode.Decompiler\bin\Release\ICSharpCode.Decompiler*.nupkg

    - name: Upload zip release build artifacts
      if: matrix.channel == 'zip' && matrix.configuration == 'release'
      uses: actions/upload-artifact@v2
      with:
        name: ILSpy ${{ env.ILSPY_VERSION_NUMBER }}
        path: ${{ env.StagingDirectory }}\ILSpy_binaries.zip
